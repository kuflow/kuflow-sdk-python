# coding=utf-8
# --------------------------------------------------------------------------
#
# MIT License
#
# Copyright (c) 2022 KuFlow
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
# --------------------------------------------------------------------------
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
#
# --------------------------------------------------------------------------
# pylint: disable=wrong-import-position

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ._patch import *  # pylint: disable=unused-wildcard-import


from ._models import (  # type: ignore
    AbstractAudited,
    Authentication,
    AuthenticationCreateParams,
    AuthenticationEngineCertificate,
    AuthenticationEngineCertificateTls,
    AuthenticationEngineToken,
    DefaultError,
    DefaultErrorInfo,
    DocumentReference,
    JsonPatchOperation,
    JsonValue,
    JsonValueError,
    Page,
    PageMetadata,
    Principal,
    PrincipalApplication,
    PrincipalPage,
    PrincipalPageItem,
    PrincipalUser,
    Process,
    ProcessChangeInitiatorParams,
    ProcessCreateParams,
    ProcessDefinitionRef,
    ProcessEntityUpdateParams,
    ProcessItem,
    ProcessItemCreateParams,
    ProcessItemDefinitionRef,
    ProcessItemMessage,
    ProcessItemMessageCreateParams,
    ProcessItemMessagePageItem,
    ProcessItemPage,
    ProcessItemPageItem,
    ProcessItemTask,
    ProcessItemTaskAppendLogParams,
    ProcessItemTaskAssignParams,
    ProcessItemTaskCreateParams,
    ProcessItemTaskDataUpdateParams,
    ProcessItemTaskLog,
    ProcessItemTaskPageItem,
    ProcessMetadataUpdateParams,
    ProcessPage,
    ProcessPageItem,
    ProcessRelated,
    Robot,
    RobotPage,
    RobotPageItem,
    RobotSourceFile,
    Tenant,
    TenantPage,
    TenantPageItem,
    TenantUser,
    TenantUserPage,
    TenantUserPageItem,
    WebhookEvent,
    WebhookEventProcessCreated,
    WebhookEventProcessCreatedData,
    WebhookEventProcessItemCreated,
    WebhookEventProcessItemCreatedData,
    WebhookEventProcessItemTaskStateChanged,
    WebhookEventProcessItemTaskStateChangedData,
    WebhookEventProcessStateChanged,
    WebhookEventProcessStateChangedData,
    Worker,
    WorkerCreateParams,
)

from ._enums import (  # type: ignore
    AuthenticationType,
    JsonPatchOperationType,
    PrincipalType,
    ProcessItemTaskLogLevel,
    ProcessItemTaskState,
    ProcessItemType,
    ProcessState,
    RobotAssetArchitecture,
    RobotAssetPlatform,
    RobotAssetType,
    RobotFilterContext,
    RobotSourceType,
    TenantPricingPlan,
    WebhookType,
)
from ._patch import __all__ as _patch_all
from ._patch import *
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "AbstractAudited",
    "Authentication",
    "AuthenticationCreateParams",
    "AuthenticationEngineCertificate",
    "AuthenticationEngineCertificateTls",
    "AuthenticationEngineToken",
    "DefaultError",
    "DefaultErrorInfo",
    "DocumentReference",
    "JsonPatchOperation",
    "JsonValue",
    "JsonValueError",
    "Page",
    "PageMetadata",
    "Principal",
    "PrincipalApplication",
    "PrincipalPage",
    "PrincipalPageItem",
    "PrincipalUser",
    "Process",
    "ProcessChangeInitiatorParams",
    "ProcessCreateParams",
    "ProcessDefinitionRef",
    "ProcessEntityUpdateParams",
    "ProcessItem",
    "ProcessItemCreateParams",
    "ProcessItemDefinitionRef",
    "ProcessItemMessage",
    "ProcessItemMessageCreateParams",
    "ProcessItemMessagePageItem",
    "ProcessItemPage",
    "ProcessItemPageItem",
    "ProcessItemTask",
    "ProcessItemTaskAppendLogParams",
    "ProcessItemTaskAssignParams",
    "ProcessItemTaskCreateParams",
    "ProcessItemTaskDataUpdateParams",
    "ProcessItemTaskLog",
    "ProcessItemTaskPageItem",
    "ProcessMetadataUpdateParams",
    "ProcessPage",
    "ProcessPageItem",
    "ProcessRelated",
    "Robot",
    "RobotPage",
    "RobotPageItem",
    "RobotSourceFile",
    "Tenant",
    "TenantPage",
    "TenantPageItem",
    "TenantUser",
    "TenantUserPage",
    "TenantUserPageItem",
    "WebhookEvent",
    "WebhookEventProcessCreated",
    "WebhookEventProcessCreatedData",
    "WebhookEventProcessItemCreated",
    "WebhookEventProcessItemCreatedData",
    "WebhookEventProcessItemTaskStateChanged",
    "WebhookEventProcessItemTaskStateChangedData",
    "WebhookEventProcessStateChanged",
    "WebhookEventProcessStateChangedData",
    "Worker",
    "WorkerCreateParams",
    "AuthenticationType",
    "JsonPatchOperationType",
    "PrincipalType",
    "ProcessItemTaskLogLevel",
    "ProcessItemTaskState",
    "ProcessItemType",
    "ProcessState",
    "RobotAssetArchitecture",
    "RobotAssetPlatform",
    "RobotAssetType",
    "RobotFilterContext",
    "RobotSourceType",
    "TenantPricingPlan",
    "WebhookType",
]
__all__.extend([p for p in _patch_all if p not in __all__])  # pyright: ignore
_patch_sdk()
